// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DropAuctionBuffersUpdated extends ethereum.Event {
  get params(): DropAuctionBuffersUpdated__Params {
    return new DropAuctionBuffersUpdated__Params(this);
  }
}

export class DropAuctionBuffersUpdated__Params {
  _event: DropAuctionBuffersUpdated;

  constructor(event: DropAuctionBuffersUpdated) {
    this._event = event;
  }

  get timeBuffer(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bidBufferBps(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DropAuctionClosed extends ethereum.Event {
  get params(): DropAuctionClosed__Params {
    return new DropAuctionClosed__Params(this);
  }
}

export class DropAuctionClosed__Params {
  _event: DropAuctionClosed;

  constructor(event: DropAuctionClosed) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get closer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get cancelled(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get auctionCreator(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get winningBidder(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class DropListingAdded extends ethereum.Event {
  get params(): DropListingAdded__Params {
    return new DropListingAdded__Params(this);
  }
}

export class DropListingAdded__Params {
  _event: DropListingAdded;

  constructor(event: DropListingAdded) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get assetContract(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lister(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get listing(): DropListingAddedListingStruct {
    return changetype<DropListingAddedListingStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }
}

export class DropListingAddedListingStruct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get tokenOwner(): Address {
    return this[1].toAddress();
  }

  get assetContract(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get startTime(): BigInt {
    return this[4].toBigInt();
  }

  get endTime(): BigInt {
    return this[5].toBigInt();
  }

  get quantity(): BigInt {
    return this[6].toBigInt();
  }

  get currency(): Address {
    return this[7].toAddress();
  }

  get reservePricePerToken(): BigInt {
    return this[8].toBigInt();
  }

  get buyoutPricePerToken(): BigInt {
    return this[9].toBigInt();
  }

  get tokenType(): i32 {
    return this[10].toI32();
  }

  get listingType(): i32 {
    return this[11].toI32();
  }

  get dropAuction(): DropListingAddedListingDropAuctionStruct {
    return changetype<DropListingAddedListingDropAuctionStruct>(
      this[12].toTuple()
    );
  }
}

export class DropListingAddedListingDropAuctionStruct extends ethereum.Tuple {
  get auctionDrop(): boolean {
    return this[0].toBoolean();
  }

  get platformAuctionDropFeeBps(): BigInt {
    return this[1].toBigInt();
  }

  get dropCreatorAddress(): Address {
    return this[2].toAddress();
  }
}

export class DropListingUpdated extends ethereum.Event {
  get params(): DropListingUpdated__Params {
    return new DropListingUpdated__Params(this);
  }
}

export class DropListingUpdated__Params {
  _event: DropListingUpdated;

  constructor(event: DropListingUpdated) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get updatedDropListing(): DropListingUpdatedUpdatedDropListingStruct {
    return changetype<DropListingUpdatedUpdatedDropListingStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class DropListingUpdatedUpdatedDropListingStruct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get tokenOwner(): Address {
    return this[1].toAddress();
  }

  get assetContract(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get startTime(): BigInt {
    return this[4].toBigInt();
  }

  get endTime(): BigInt {
    return this[5].toBigInt();
  }

  get quantity(): BigInt {
    return this[6].toBigInt();
  }

  get currency(): Address {
    return this[7].toAddress();
  }

  get reservePricePerToken(): BigInt {
    return this[8].toBigInt();
  }

  get buyoutPricePerToken(): BigInt {
    return this[9].toBigInt();
  }

  get tokenType(): i32 {
    return this[10].toI32();
  }

  get listingType(): i32 {
    return this[11].toI32();
  }

  get dropAuction(): DropListingUpdatedUpdatedDropListingDropAuctionStruct {
    return changetype<DropListingUpdatedUpdatedDropListingDropAuctionStruct>(
      this[12].toTuple()
    );
  }
}

export class DropListingUpdatedUpdatedDropListingDropAuctionStruct extends ethereum.Tuple {
  get auctionDrop(): boolean {
    return this[0].toBoolean();
  }

  get platformAuctionDropFeeBps(): BigInt {
    return this[1].toBigInt();
  }

  get dropCreatorAddress(): Address {
    return this[2].toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MSCommunityFeeInfoUpdated extends ethereum.Event {
  get params(): MSCommunityFeeInfoUpdated__Params {
    return new MSCommunityFeeInfoUpdated__Params(this);
  }
}

export class MSCommunityFeeInfoUpdated__Params {
  _event: MSCommunityFeeInfoUpdated;

  constructor(event: MSCommunityFeeInfoUpdated) {
    this._event = event;
  }

  get MSCommunityFeeRecipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get primaryMSCommunityFeeBps(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NewDropBidOffer extends ethereum.Event {
  get params(): NewDropBidOffer__Params {
    return new NewDropBidOffer__Params(this);
  }
}

export class NewDropBidOffer__Params {
  _event: NewDropBidOffer;

  constructor(event: NewDropBidOffer) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get offeror(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get listingType(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get quantityWanted(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalOfferAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get auctionEndTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class PlatformFeeInfoUpdated extends ethereum.Event {
  get params(): PlatformFeeInfoUpdated__Params {
    return new PlatformFeeInfoUpdated__Params(this);
  }
}

export class PlatformFeeInfoUpdated__Params {
  _event: PlatformFeeInfoUpdated;

  constructor(event: PlatformFeeInfoUpdated) {
    this._event = event;
  }

  get platformFeeRecipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class MSDropMarketplace__getMSCommunityFeeInfoResult {
  value0: Address;
  value1: i32;

  constructor(value0: Address, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): i32 {
    return this.value1;
  }
}

export class MSDropMarketplace__listingsResultDropAuctionStruct extends ethereum.Tuple {
  get auctionDrop(): boolean {
    return this[0].toBoolean();
  }

  get platformAuctionDropFeeBps(): BigInt {
    return this[1].toBigInt();
  }

  get dropCreatorAddress(): Address {
    return this[2].toAddress();
  }
}

export class MSDropMarketplace__listingsResult {
  value0: BigInt;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: Address;
  value8: BigInt;
  value9: BigInt;
  value10: i32;
  value11: i32;
  value12: MSDropMarketplace__listingsResultDropAuctionStruct;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: Address,
    value8: BigInt,
    value9: BigInt,
    value10: i32,
    value11: i32,
    value12: MSDropMarketplace__listingsResultDropAuctionStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set(
      "value10",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value10))
    );
    map.set(
      "value11",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value11))
    );
    map.set("value12", ethereum.Value.fromTuple(this.value12));
    return map;
  }

  getListingId(): BigInt {
    return this.value0;
  }

  getTokenOwner(): Address {
    return this.value1;
  }

  getAssetContract(): Address {
    return this.value2;
  }

  getTokenId(): BigInt {
    return this.value3;
  }

  getStartTime(): BigInt {
    return this.value4;
  }

  getEndTime(): BigInt {
    return this.value5;
  }

  getQuantity(): BigInt {
    return this.value6;
  }

  getCurrency(): Address {
    return this.value7;
  }

  getReservePricePerToken(): BigInt {
    return this.value8;
  }

  getBuyoutPricePerToken(): BigInt {
    return this.value9;
  }

  getTokenType(): i32 {
    return this.value10;
  }

  getListingType(): i32 {
    return this.value11;
  }

  getDropAuction(): MSDropMarketplace__listingsResultDropAuctionStruct {
    return this.value12;
  }
}

export class MSDropMarketplace__winningBidResult {
  value0: BigInt;
  value1: Address;
  value2: BigInt;
  value3: Address;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: BigInt,
    value3: Address,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getListingId(): BigInt {
    return this.value0;
  }

  getOfferor(): Address {
    return this.value1;
  }

  getQuantityWanted(): BigInt {
    return this.value2;
  }

  getCurrency(): Address {
    return this.value3;
  }

  getPricePerToken(): BigInt {
    return this.value4;
  }

  getExpirationTimestamp(): BigInt {
    return this.value5;
  }
}

export class MSDropMarketplace extends ethereum.SmartContract {
  static bind(address: Address): MSDropMarketplace {
    return new MSDropMarketplace("MSDropMarketplace", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAX_BPS(): BigInt {
    let result = super.call("MAX_BPS", "MAX_BPS():(uint64)", []);

    return result[0].toBigInt();
  }

  try_MAX_BPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_BPS", "MAX_BPS():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bidBufferBps(): BigInt {
    let result = super.call("bidBufferBps", "bidBufferBps():(uint64)", []);

    return result[0].toBigInt();
  }

  try_bidBufferBps(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("bidBufferBps", "bidBufferBps():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  contractType(): Bytes {
    let result = super.call("contractType", "contractType():(bytes32)", []);

    return result[0].toBytes();
  }

  try_contractType(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("contractType", "contractType():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  contractVersion(): i32 {
    let result = super.call("contractVersion", "contractVersion():(uint8)", []);

    return result[0].toI32();
  }

  try_contractVersion(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "contractVersion",
      "contractVersion():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getMSCommunityFeeInfo(): MSDropMarketplace__getMSCommunityFeeInfoResult {
    let result = super.call(
      "getMSCommunityFeeInfo",
      "getMSCommunityFeeInfo():(address,uint16)",
      []
    );

    return new MSDropMarketplace__getMSCommunityFeeInfoResult(
      result[0].toAddress(),
      result[1].toI32()
    );
  }

  try_getMSCommunityFeeInfo(): ethereum.CallResult<
    MSDropMarketplace__getMSCommunityFeeInfoResult
  > {
    let result = super.tryCall(
      "getMSCommunityFeeInfo",
      "getMSCommunityFeeInfo():(address,uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MSDropMarketplace__getMSCommunityFeeInfoResult(
        value[0].toAddress(),
        value[1].toI32()
      )
    );
  }

  getPlatformFeeInfo(): Address {
    let result = super.call(
      "getPlatformFeeInfo",
      "getPlatformFeeInfo():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getPlatformFeeInfo(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPlatformFeeInfo",
      "getPlatformFeeInfo():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  listings(param0: BigInt): MSDropMarketplace__listingsResult {
    let result = super.call(
      "listings",
      "listings(uint256):(uint256,address,address,uint256,uint256,uint256,uint256,address,uint256,uint256,uint8,uint8,(bool,uint256,address))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new MSDropMarketplace__listingsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toAddress(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toI32(),
      result[11].toI32(),
      changetype<MSDropMarketplace__listingsResultDropAuctionStruct>(
        result[12].toTuple()
      )
    );
  }

  try_listings(
    param0: BigInt
  ): ethereum.CallResult<MSDropMarketplace__listingsResult> {
    let result = super.tryCall(
      "listings",
      "listings(uint256):(uint256,address,address,uint256,uint256,uint256,uint256,address,uint256,uint256,uint8,uint8,(bool,uint256,address))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MSDropMarketplace__listingsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toAddress(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toI32(),
        value[11].toI32(),
        changetype<MSDropMarketplace__listingsResultDropAuctionStruct>(
          value[12].toTuple()
        )
      )
    );
  }

  multicall(data: Array<Bytes>): Array<Bytes> {
    let result = super.call("multicall", "multicall(bytes[]):(bytes[])", [
      ethereum.Value.fromBytesArray(data)
    ]);

    return result[0].toBytesArray();
  }

  try_multicall(data: Array<Bytes>): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall("multicall", "multicall(bytes[]):(bytes[])", [
      ethereum.Value.fromBytesArray(data)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  timeBuffer(): BigInt {
    let result = super.call("timeBuffer", "timeBuffer():(uint64)", []);

    return result[0].toBigInt();
  }

  try_timeBuffer(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("timeBuffer", "timeBuffer():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalListings(): BigInt {
    let result = super.call("totalListings", "totalListings():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalListings(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalListings",
      "totalListings():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  winningBid(param0: BigInt): MSDropMarketplace__winningBidResult {
    let result = super.call(
      "winningBid",
      "winningBid(uint256):(uint256,address,uint256,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new MSDropMarketplace__winningBidResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_winningBid(
    param0: BigInt
  ): ethereum.CallResult<MSDropMarketplace__winningBidResult> {
    let result = super.tryCall(
      "winningBid",
      "winningBid(uint256):(uint256,address,uint256,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MSDropMarketplace__winningBidResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }
}

export class CloseAuctionCall extends ethereum.Call {
  get inputs(): CloseAuctionCall__Inputs {
    return new CloseAuctionCall__Inputs(this);
  }

  get outputs(): CloseAuctionCall__Outputs {
    return new CloseAuctionCall__Outputs(this);
  }
}

export class CloseAuctionCall__Inputs {
  _call: CloseAuctionCall;

  constructor(call: CloseAuctionCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _closeFor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CloseAuctionCall__Outputs {
  _call: CloseAuctionCall;

  constructor(call: CloseAuctionCall) {
    this._call = call;
  }
}

export class CreateListingCall extends ethereum.Call {
  get inputs(): CreateListingCall__Inputs {
    return new CreateListingCall__Inputs(this);
  }

  get outputs(): CreateListingCall__Outputs {
    return new CreateListingCall__Outputs(this);
  }
}

export class CreateListingCall__Inputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }

  get _params(): CreateListingCall_paramsStruct {
    return changetype<CreateListingCall_paramsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreateListingCall__Outputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }
}

export class CreateListingCall_paramsStruct extends ethereum.Tuple {
  get assetContract(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get startTime(): BigInt {
    return this[2].toBigInt();
  }

  get secondsUntilEndTime(): BigInt {
    return this[3].toBigInt();
  }

  get quantityToList(): BigInt {
    return this[4].toBigInt();
  }

  get currencyToAccept(): Address {
    return this[5].toAddress();
  }

  get reservePricePerToken(): BigInt {
    return this[6].toBigInt();
  }

  get buyoutPricePerToken(): BigInt {
    return this[7].toBigInt();
  }

  get listingType(): i32 {
    return this[8].toI32();
  }

  get dropAuction(): CreateListingCall_paramsDropAuctionStruct {
    return changetype<CreateListingCall_paramsDropAuctionStruct>(
      this[9].toTuple()
    );
  }
}

export class CreateListingCall_paramsDropAuctionStruct extends ethereum.Tuple {
  get auctionDrop(): boolean {
    return this[0].toBoolean();
  }

  get platformAuctionDropFeeBps(): BigInt {
    return this[1].toBigInt();
  }

  get dropCreatorAddress(): Address {
    return this[2].toAddress();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _defaultAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _trustedForwarders(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _MSFeeRecipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _nativeTokenWrapper(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _MSCommunityFeeRecipient(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _MSCommunityFeeBps(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MulticallCall extends ethereum.Call {
  get inputs(): MulticallCall__Inputs {
    return new MulticallCall__Inputs(this);
  }

  get outputs(): MulticallCall__Outputs {
    return new MulticallCall__Outputs(this);
  }
}

export class MulticallCall__Inputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class MulticallCall__Outputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class OfferCall extends ethereum.Call {
  get inputs(): OfferCall__Inputs {
    return new OfferCall__Inputs(this);
  }

  get outputs(): OfferCall__Outputs {
    return new OfferCall__Outputs(this);
  }
}

export class OfferCall__Inputs {
  _call: OfferCall;

  constructor(call: OfferCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantityWanted(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currency(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _pricePerToken(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _expirationTimestamp(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class OfferCall__Outputs {
  _call: OfferCall;

  constructor(call: OfferCall) {
    this._call = call;
  }
}

export class OnERC1155BatchReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155BatchReceivedCall__Inputs {
    return new OnERC1155BatchReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155BatchReceivedCall__Outputs {
    return new OnERC1155BatchReceivedCall__Outputs(this);
  }
}

export class OnERC1155BatchReceivedCall__Inputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get value3(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155BatchReceivedCall__Outputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC1155ReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAuctionBuffersCall extends ethereum.Call {
  get inputs(): SetAuctionBuffersCall__Inputs {
    return new SetAuctionBuffersCall__Inputs(this);
  }

  get outputs(): SetAuctionBuffersCall__Outputs {
    return new SetAuctionBuffersCall__Outputs(this);
  }
}

export class SetAuctionBuffersCall__Inputs {
  _call: SetAuctionBuffersCall;

  constructor(call: SetAuctionBuffersCall) {
    this._call = call;
  }

  get _timeBuffer(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _bidBufferBps(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetAuctionBuffersCall__Outputs {
  _call: SetAuctionBuffersCall;

  constructor(call: SetAuctionBuffersCall) {
    this._call = call;
  }
}

export class SetMSCommunityFeeInfoCall extends ethereum.Call {
  get inputs(): SetMSCommunityFeeInfoCall__Inputs {
    return new SetMSCommunityFeeInfoCall__Inputs(this);
  }

  get outputs(): SetMSCommunityFeeInfoCall__Outputs {
    return new SetMSCommunityFeeInfoCall__Outputs(this);
  }
}

export class SetMSCommunityFeeInfoCall__Inputs {
  _call: SetMSCommunityFeeInfoCall;

  constructor(call: SetMSCommunityFeeInfoCall) {
    this._call = call;
  }

  get _MSCommunityFeeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _MSCommunityFeeBps(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMSCommunityFeeInfoCall__Outputs {
  _call: SetMSCommunityFeeInfoCall;

  constructor(call: SetMSCommunityFeeInfoCall) {
    this._call = call;
  }
}

export class SetPlatformFeeInfoCall extends ethereum.Call {
  get inputs(): SetPlatformFeeInfoCall__Inputs {
    return new SetPlatformFeeInfoCall__Inputs(this);
  }

  get outputs(): SetPlatformFeeInfoCall__Outputs {
    return new SetPlatformFeeInfoCall__Outputs(this);
  }
}

export class SetPlatformFeeInfoCall__Inputs {
  _call: SetPlatformFeeInfoCall;

  constructor(call: SetPlatformFeeInfoCall) {
    this._call = call;
  }

  get _platformFeeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPlatformFeeInfoCall__Outputs {
  _call: SetPlatformFeeInfoCall;

  constructor(call: SetPlatformFeeInfoCall) {
    this._call = call;
  }
}

export class UpdateListingCall extends ethereum.Call {
  get inputs(): UpdateListingCall__Inputs {
    return new UpdateListingCall__Inputs(this);
  }

  get outputs(): UpdateListingCall__Outputs {
    return new UpdateListingCall__Outputs(this);
  }
}

export class UpdateListingCall__Inputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantityToList(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _reservePricePerToken(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _buyoutPricePerToken(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _currencyToAccept(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _startTime(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _secondsUntilEndTime(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class UpdateListingCall__Outputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }
}
